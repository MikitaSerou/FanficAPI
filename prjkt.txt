Требуется разработать сайт для фанфиков ("Мордор — техногенная цивилизация, опороченная победителями").
Неаутентифицированным пользователи могут только читать произведения (доступен поиск, недоступно создание произведений,
комментарии, лайки и рейтинги).
Аутентифицированные пользователи имеют доступ ко всему, кроме админки.
Админка позволяет управлять пользователями (просматривать, блокировать, удалять, назначать админами). Администратор
видит каждую страницу пользователя и каждое произведение как автор (например, может редактировать или создать от имени
пользователя с его страницы новое произведение). Для Java админка - опционально, можно без админки.
Требуется поддерживать регистрацию с отправкой мыла с подтверждением (до подтверждения доступа нет), аутентификация
через сайт. Для Java подтверждение мыла — опционально, можно без подтверждения.
После регистрации должен произойти ондординг, который предложит пользователю настроить предпочтения. При повторном
логине эти экраны показываться не должны. В настройках должна быть возможность добавлять и удалять предпочтения.
На каждой странице доступен полнотекстовый поиск по сайту. Результаты поиска — всегда произведения, например, если
текст найден в комментарии к произведению, что должно быть возможно, то выводится ссылка на произведение. Для Java
поиск — опционально, можно без поиска. У каждого пользователя есть его личная страница, на которой он управляет списком
своих произведений (таблица с фильтраций и сортировками, возможность создать/удалить/редактировать произведение/открыть
в режиме чтения), поля с информаций о пользователе (in-place editing) и "медальки" (последние — задание со звездочкой).
В настройках должна быть возможность добавлять и удалять предпочтения.
Возможность добавить и удалить произведение в “Закладки” и управлять этим списком.
Каждое произведение состоит из: название, краткое описание, фэндом (из фиксированного набора, например, "Гарри Поттер",
"Приключения Электроника", "Алиса" и проч.), тэги (вводится несколько тэгов, необходимо автодополнение -
когда пользователь начинает вводить тэг, выпадает список с вариантами слов, которые уже вводились ранее на сайте).
Помимо этого, произведение состоит из "глав" - название главы, блок текста с поддержкой форматирования markdown и одной
опциональной картинкой. Глава автомагически формируют оглавление с автонумерацией и набор элементов управления для
перехода по главам. На странице произведения главы можно добавлять/удалять/открывать на редактирование/изменять порядок
(автомагическая перенумерация). Для Java тэгов — опционально, можно без тэгов.
Все картинки сохраняются в облаке, все картинки загружаются драг-н-дропом.
На главной странице отображаются: последние обновленные произведения, произведения с самыми большими рейтингами,
облако тэгов.
Каждый пользовать может проставить "рейтинг" (от 1 до 5 звездочек) произведения (не более одного от одного пользователя
на произведение) — средний рейтинг отображется у произведения. У каждой главы (в конце главы в режиме чтения)
пользователь может поставить лайк (не более одного на одну главу от одного пользователя). Для Java рейтинги и лайки -
опционально, можно без рейтигов и лайков. Сайт должен поддерживать два языка: русский и английский
(пользователь выбирает и выбор сохраняется). Сайт должен поддерживать два оформления (темы): светлое и темное
(пользователь выбирает и выбор сохраняется). Для Java два языка и две темы - опционально, можно просто английский и
одно светлое оформление.
Обязательно: Bootstrap (или любой другой CSS-фреймворк), адаптивная вёрстка, поддержка разных разрешений
(в том числе телефон), ORM для доступа к данным, движок для полнотекстового поиск (или средствами базы, или отдельный
движок — НЕ ПОЛНОЕ СКАНИРОВАНИЕ селектами).
ДЛЯ JAVA нужно реализовать дополнительный клиент под Android. Т.е. приложение, которое позволяет просматривать список
созданных пользователями произведений с возможностью прочитать каждый из них.
- Регистрация через приложение
- Аутентификация через аккунт созданный через сайт или приложение
- Список всех пользовательских произведений с возможностью сортировки по дате создания или рейтингу. Каждый элемент
списка должен содержать название, описание, картинку, дату размещения, тэги и фэндом. По клику на карточку произведение
должен открыться на отдельном экране для удобного чтения рассказа.
В приложении также должна быть возможность:
- фильтрация по тэгам и фэндому,
- поставить рейтинг произведению,
- светлая и темная темы,
- просмотреть только произведения, отвечающие предпочтениям пользователя. После регистрации должен произойти ондординг,
который предложит пользователю настроить предпочтения. При повторном логине эти экраны показываться не должны.
В настройках должна быть возможность добавлять и удалять предпочтения.
- возможность расшарить ссылку на фанфик через приложения месенджеры
- добавить и удалить произведение в “Закладки” и просмотреть этот список на отдельном экране. Добавить произведение в
“Закладки” можно на общем списке, а также на страничке чтения. При отсутствии интернета должна быть возможность читать
рассказы добавленные в закладки.
- сохранение места на котором пользователь закончил чтение и продолжение чтения с этого места
- показывать пользователю push уведомление о новом фанфике по любимому фэндому.
- приложение должно корректно обрабатывать отсутствие интернета и ошибки сервера.
- UI должен выглядеть целостно и закончено.
Дополнительно (после реализации остальных требований):
1. Добавление заметок к выбранной фанфику. А также редактирование и удаление уже созданных заметок.
2. Добавить функцию “Защита заметок паролем” - при включении функции у пользователя должна быть возможность ввести
пароль, который в дальнейшем будет использоваться для доступа к заметкам.
3. Задание 2 дополнить функцией Touch ID / Face ID, которая позволит не вводить пароль каждый раз при открытии заметок.
4. полнотесктовый поиск по произведениям
----------------------
Требования со звездочкой (после реализации всех остальных требований):
* При открытие произведения в режиме чтения в конце отображаются комментарии (общие на всю произведение, не отдельно
по главам). Комментарии линейные, нельзя комментировать комментариий, новый добавляется только "в хвост". Необходимо
реализовать автоматическую подгрузку комментариев — если у меня открыта страница с комментариями и кто-то другой
добавляет новый, он у меня автомагически появляется (возможна задержка в 2-5 секунд).
* Дополнительно аутентификация через социальные сети (Facebook, Twitter, etc.).
* Экспорт произведений в PDF/Word (при отображении произведения добавить кнопку, которая позволяет скачать произведение
в PDF.
* Поддержка "медалек" - по достижению какого-то результата на странице пользователя отображается "медалька" (маленькие
версии отображаются везде на сайте после имени пользователя, а само имя всегда является ссылкой на страницу
пользователя). Например: "написал 3 щедевра", "собрал 10 лайков", "получил за произведение рейтинг 4+ с количеством
отзывов 10+" и проч. (не менее разных 4 медалей).
* Реализация "тезауруса" - при длинном нажатии на слово появляется список синонимов (не изобретать и не пилить с нуля,
конечно).
ВАЖНО: не копируйте из кодо-помоек всякую фигню. Лучше сделайте меньше, но сами разбиритесь, чтобы уметь ответить как
на лету что-то поменять/добавить. Кураторы принимают огромное количество однотипных проектов и видели, вероятно,
большинство выложенной фигни на тему.